version: "3.3"
services:
  #
  # Microservices
  #
  media:
    build: ./media-service
    image: alexandria-media
    restart: on-failure
    volumes:
      - api:/usr/src/media/
    ports:
      - "3001:8080"
      - "4001:31337"
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - alexandrianet
  author:
    build: ./author-service
    image: alexandria-author
    restart: on-failure
    volumes:
      - api:/usr/src/author/
    ports:
      - "3002:8080"
      - "4002:31337"
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - alexandrianet

  #
  # Infrastructure
  #
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6378:6379"
    networks:
      - alexandrianet

  postgres:
    image: "postgres:12.2-alpine"
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_MULTIPLE_DATABASES=alexandria_author,alexandria_media
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    volumes:
      - ./scripts/migrations/:/docker-entrypoint-initdb.d/
    networks:
      - alexandrianet

  zipkin:
    image: "openzipkin/zipkin"
    restart: always
    ports:
      - "9412:9411"
    networks:
      - alexandrianet

  zookeeper:
    image: "bitnami/zookeeper:latest"
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ZOO_ENABLE_AUTH=no
      - ZOO_SERVER_USERS=kafka
      - ZOO_SERVER_PASSWORDS=root
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./third-party/zookeeper/:/bitnami/zookeeper
    networks:
      - alexandrianet

  kafka:
    image: "bitnami/kafka:latest"
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_ZOOKEEPER_USER=kafka
      - KAFKA_ZOOKEEPER_PASSWORD=root
      - KAFKA_INTER_BROKER_USER=interuser
      - KAFKA_INTER_BROKER_PASSWORD=interpassword
      - KAFKA_BROKER_USER=user
      - KAFKA_BROKER_PASSWORD=password
    volumes:
      - ./third-party/kafka/:/bitnami/kafka
    networks:
      - alexandrianet


volumes:
  api:
  database_postgres:

# Networks to be created to facilitate communication between containers
networks:
  alexandrianet:
    driver: bridge