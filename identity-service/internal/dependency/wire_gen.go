// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package dependency

import (
	"context"
	"github.com/alexandria-oss/core/config"
	"github.com/alexandria-oss/core/logger"
	"github.com/maestre3d/alexandria/identity-service/internal/infrastructure"
	"github.com/maestre3d/alexandria/identity-service/internal/interactor"
)

// Injectors from wire.go:

func InjectUserUseCase() (*interactor.UserUseCase, error) {
	logLogger := logger.NewZapLogger()
	context := provideContext()
	kernel, err := config.NewKernel(context)
	if err != nil {
		return nil, err
	}
	userCognitoRepository := infrastructure.NewUserCognitoRepository(logLogger, kernel)
	userUseCase := interactor.NewUserUseCase(logLogger, userCognitoRepository)
	return userUseCase, nil
}

// wire.go:

var Ctx context.Context = context.Background()

func provideContext() context.Context {
	return Ctx
}
